{"version":3,"sources":["ControlBlock.js","LeftBlock.js","BottomBlock.js","RightBlock.js","Header.js","AnimatedSVG.js","App.js","serviceWorker.js","index.js"],"names":["ControlBlock","react_default","a","createElement","className","this","props","children","Component","LeftBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","open","react_motion","style","x","spring","_ref","transform","concat","href","BottomBlock","RightBlock","Header","AnimatedSVG","stiffness","damping","width","height","viewBox","version","xmlns","id","stroke","strokeWidth","fill","fillRule","d","strokeDasharray","strokeDashoffset","App","pathOpen","leftOpen","bottomOpen","rightOpen","_this2","Header_Header","ControlBlock_ControlBlock","onClick","setState","AnimatedSVG_AnimatedSVG","LeftBlock_LeftBlock","BottomBlock_BottomBlock","RightBlock_RightBlock","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2a33b2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class ControlBlock extends Component {\n  render() {\n    return (\n      <div className=\"Control Block\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Motion, spring } from 'react-motion';\n\nexport default class LeftBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {open: this.props.open}\n  }\n\n  render() {\n    return (\n      <Motion style={{x: spring(this.props.open ? 0 : -150)}}>\n        {({x}) =>\n          <div\n            className=\"Left Side Block\"\n            style={{\n              transform: `translate(${x}%, 0)`\n            }}\n          >\n            <a href=\"https://docs.google.com/presentation/d/1RTXNoTgRS1VUyeCy9KIpXEs5D3bDK_9ZtrOvj7R1EiY/edit?usp=sharing\">Slides</a>\n          </div>\n        }\n      </Motion>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Motion, spring } from 'react-motion';\n\nexport default class BottomBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {open: this.props.open}\n  }\n\n  render() {\n    return (\n      <Motion style={{x: spring(this.props.open ? 0 : 300)}}>\n        {({x}) =>\n          <div\n            className=\"Bottom Block\"\n            style={{\n              transform: `translate(0, ${x}%)`\n            }}\n          />\n        }\n      </Motion>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Motion, spring } from 'react-motion';\n\nexport default class RightBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {open: this.props.open}\n  }\n\n  render() {\n    return (\n      <Motion style={{x: spring(this.props.open ? 0 : 150)}}>\n        {({x}) =>\n          <div\n            className=\"Right Side Block\"\n            style={{\n              transform: `translate(${x}%, 0)`\n            }}\n          />\n        }\n      </Motion>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <h1>Example Animations</h1>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Motion, spring } from 'react-motion';\n\nexport default class AnimatedSVG extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {open: this.props.open}\n  }\n\n  render() {\n    return (\n      <div className=\"Squiggle\">\n        <Motion style={{x: spring(this.props.open ? 0 : 100, {stiffness: 90, damping: 30})}}>\n          {({x}) =>\n            <svg width=\"580px\" height=\"220px\" viewBox=\"0 0 580 220\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"Artboard\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <path d=\"M75,96 C26,111 30,147 75,152 C121,157 121,50 155,96 C188,143 248,192 286,146 C324,100 347,61 320,42 C292,23 192,136 320,146 C370,150 444,148 540,141\" id=\"Path\" stroke=\"#979797\" strokeWidth=\"6\" fillRule=\"nonzero\" strokeDasharray=\"904.2 904.2\" strokeDashoffset={904.2 * (x / 100)}></path>\n                </g>\n            </svg>\n          }\n        </Motion>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ControlBlock from './ControlBlock';\nimport LeftBlock from './LeftBlock';\nimport BottomBlock from './BottomBlock';\nimport RightBlock from './RightBlock';\nimport Header from './Header';\nimport AnimatedSVG from './AnimatedSVG';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pathOpen: false,\n      leftOpen: false,\n      bottomOpen: false,\n      rightOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header>\n          <ControlBlock>\n            <button onClick={() => this.setState({leftOpen: !this.state.leftOpen})}>\n              Left Pane\n            </button>\n\n            <button onClick={() => this.setState({bottomOpen: !this.state.bottomOpen})}>\n              Bottom Pane\n            </button>\n\n            <button onClick={() => this.setState({rightOpen: !this.state.rightOpen})}>\n              Right Pane\n            </button>\n\n            <button onClick={() => this.setState({pathOpen: !this.state.pathOpen})}>\n              Path\n            </button>\n          </ControlBlock>\n        </Header>\n        <br/>\n        <AnimatedSVG open={this.state.pathOpen}/>\n        <LeftBlock open={this.state.leftOpen}/>\n        <BottomBlock open={this.state.bottomOpen}/>\n        <RightBlock open={this.state.rightOpen}/>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}